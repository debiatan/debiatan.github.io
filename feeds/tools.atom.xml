<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Transition Dreams</title><link href="http://blog.debiatan.net/" rel="alternate"></link><link href="http://blog.debiatan.net/feeds/tools.atom.xml" rel="self"></link><id>http://blog.debiatan.net/</id><updated>2014-04-01T10:00:00+02:00</updated><entry><title>Unit-Test-Based Programming</title><link href="http://blog.debiatan.net/utbp.html" rel="alternate"></link><updated>2014-04-01T10:00:00+02:00</updated><author><name>Miguel Lechón</name></author><id>tag:blog.debiatan.net,2014-04-01:utbp.html</id><summary type="html">&lt;p&gt;UTBP is a new subparadigm of Declarative Programming, in which code is generated from a description of its intended behavior, specified through unit tests. This work was presented at &lt;a class="reference external" href="http://www.sigbovik.org/2014/"&gt;SIGBOVIK 2014&lt;/a&gt; and received the &lt;em&gt;Most Frighteningly Like Real Research&lt;/em&gt; Award.&lt;/p&gt;
&lt;p&gt;For an in-depth tour of UTBP, you can check &lt;a class="reference external" href="https://github.com/debiatan/utbp/blob/master/doc/article.pdf"&gt;the article&lt;/a&gt; and browse the &lt;a class="reference external" href="https://github.com/debiatan/utbp"&gt;associated GitHub repository&lt;/a&gt;. If you prefer a light introduction, you can choose between two versions of the same video. This one is dubbed:&lt;/p&gt;
&lt;div class="flex-video widescreen" style="margin: 0 auto;text-align:center;"&gt;
&lt;iframe src="//player.vimeo.com/video/89179353" frameborder="0" title="Unit-Test-Based Programming -- English dubbing" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;This one is subbed:&lt;/p&gt;
&lt;div class="flex-video widescreen" style="margin: 0 auto;text-align:center;"&gt;
&lt;iframe src="//player.vimeo.com/video/89182858" frameborder="0" title="Unit-Test-Based Programming -- English subtitles" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
</summary><category term="unit tests"></category><category term="SIGBOVIK"></category><category term="automatic programming"></category></entry><entry><title>xrobot</title><link href="http://blog.debiatan.net/xrobot.html" rel="alternate"></link><updated>2014-01-02T10:00:00+01:00</updated><author><name>Miguel Lechón</name></author><id>tag:blog.debiatan.net,2014-01-02:xrobot.html</id><summary type="html">&lt;p&gt;Every once in a while, I need to step outside the command line. Sometimes I'm even forced to interact with &lt;em&gt;deaf&lt;/em&gt; graphical programs, those that do not listen to standard input or a meager HTTP port. In those desperate times, were it not for tools such as &lt;a class="reference external" href="http://xautomation.sf.net/"&gt;XAUT&lt;/a&gt; or &lt;a class="reference external" href="http://www.semicomplete.com/blog/projects/xdotool/"&gt;xdotool&lt;/a&gt;, I would have to type and click outside of &lt;tt class="docutils literal"&gt;VIM&lt;/tt&gt;, like cavemen probably did.&lt;/p&gt;
&lt;p&gt;Those two little programs are enough to make me happy when confronted with an X11 server. However, my computer, of a more whimsical nature, is reluctant to execute binaries other than a Python interpreter (like any other well-meaning general-purpose device assembled during the 21st century, really). That is why I have decided to write the simplest Python library I could think of that is able to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Find out the position of the mouse pointer&lt;/li&gt;
&lt;li&gt;Move the mouse pointer around the screen&lt;/li&gt;
&lt;li&gt;Press and release mouse buttons&lt;/li&gt;
&lt;li&gt;Press and release keys in the keyboard&lt;/li&gt;
&lt;li&gt;Capture the screen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;xrobot&lt;/tt&gt; library is lean, simple and Python[23]-compliant. It is just a wrapper around functions defined inside &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-xlib&lt;/span&gt;&lt;/tt&gt;. Since Xlib screen capture is painfully slow, the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;python-gtk&lt;/span&gt;&lt;/tt&gt; bindings are used instead, if present. I have decided to return images as &lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt; arrays for my convenience; if you find that dependency unbearable, you can root it out easily from the code.&lt;/p&gt;
&lt;div class="flex-video widescreen" style="margin: 0 auto;text-align:center;"&gt;
&lt;iframe src="//player.vimeo.com/video/83220240" frameborder="0" title="5000 clicks" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p class="caption-text"&gt;Here's me, at five hundred clicks/second.&lt;/p&gt;
&lt;p&gt;I leave you with a &lt;a class="reference external" href="https://github.com/debiatan/xrobot"&gt;link to the xrobot github repository&lt;/a&gt; and some sample code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xrobot&lt;/span&gt;

&lt;span class="n"&gt;xr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xrobot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XRobot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;xr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;robot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;XRobot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mouse_pos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Current mouse position: x =&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;y =&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="c"&gt;# Press and release &amp;#39;a&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key_down&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;comma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;     &lt;span class="c"&gt;# Press &amp;#39;,&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key_up&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;comma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c"&gt;# Release &amp;#39;,&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;screen_resolution&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Screen width:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Screen height:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;robot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;capture_screen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pylab&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pl&lt;/span&gt;
&lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</summary><category term="xrobot"></category></entry></feed>